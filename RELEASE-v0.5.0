HPX Release notes, Version 0.5.0

Release date: 02/27/2015

Distributed under the License, Version 0.5.0. (See accompanying file LICENSE_0.5.0.txt)

New features
=========================
1. Replaced network infrastructure

2. Instrumentation interface
The new instrumentation system in hpx is designed to make it easy to collect performance-related information from hpx. While it could be (and will be soon) used for counters or profiling, at present it is used exclusively for tracing.

Currently we can trace parcel lifecycle events (create, send, receive, run, end), put with completion send and receive events, and some scheduler events. Typically a user will be interested in just one of these sets of events, so when tracing which “class” to trace can be set.

Using Instrumentation
----------------------
In order to use the instrumentation interface, hpx must be compiled with the --enable-instrumentation option set.

There are four options that affect tracing:
* --hpx-trace-dir=<directory name as string> (defaults to "/tmp" - which is strongly recommended) which is where the tracing infrastructure will save the traces
* --hpx-trace-filesize=<size as unsigned integer> which is a limit on the maximum trace file size
* --hpx-trace-classes=<list of classes as strings> which is the “class” of events to trace (possible values are "parcel","pwc","sched” and “all”)
* --hpx-trace-at=<list of ranks as integers> which can be set to a list of ranks at which to trace, or it can be set to HPX_LOCALITY_ALL or HPX_LOCALITY_NONE to turn tracing on or off everywhere

Tracing records certain events and writes all the events for one rank to a file within a time-stamped subdirectory (which will be located in the specified trace directory) at that rank. Each event is assigned a time, accurate to the nearest microsecond.

The current trace file format is an ad hoc binary format that can be easily deserialized and processed. We are considering our options in file formats for future releases.

3. Commutative associative reduction LCO
4. SSSP application KLA support
5. hpx_call to work with hpx_parcel_send_through()
6. Countdown type LCO interface

Improvements/Enhancements
=========================
1. Typed hpx_bcast() with variadic arguments.
2. hpx_run() to support typed actions
3. Setting up CI on BigRed2
4. Updated the option parsing infrastructure.
5. The API to allocate an array of LCO local to the calling locality.
6. Experimental support for --hpx-dbg-waitonsegv.

Removed/Retired Features
=========================

Bug Fixes
=========================
1. Build fixes.
2. Fix send/recv example.
3. ls/lr network with support for request limits
4. HPX_NULL should not be a valid parcel target.
5. Fix for SMP test_memget and test_memput which were failing non-deterministically.
6. Not to return NULL when MPI_THREAD_FUNNELED cannot be initialized during MPI bootstrap.
7. libffi required 8 bytes of space for all integer return types.
8. Calling untyped actions were causing OOM.
9. Optimized clang-3.5.1 build had a race condition.
10. HPX_ACTION_NULL should be deterministically action 0.
11. pwc/photon shutdown error on qib0, UGNI backend.
12. Return num remaining requests in PWC probe_completion.
13. Make sure PMI works over MPI bootstrap on cray.
14. Bug with rendezvous parcel sizes.
15. Parcel floods cause pec to hang with default parameters.

Build Instructions
========================
The detailed build instructions can be found at README or Getting started with HPX Runtime Systems on HPX gitlab wiki.

Known bugs & limitations
========================
1. Clang regressions trigger runtime failures (confirmed in 3.5.1)
2. HPX v0.5.0 is not tested with ARM.
3. Cray support is experimental (use aprun -n [nodes] -N 1 -d [ppn] ./app --hpx-threads=[ppn]).
4. Typed action with user defined datatype may result in argument corruption.
5. Control-C does not stop parallel configure reliably.
6. perf_lco_netfutures_msgsize runs slowly on isir/pwc.
7. Some tutorials use deprecated HPX interfaces.
8. -flto unsupported.
9. Multiple calls to hpx_thread_current_local_target() in a PINNED action cause a reference count imbalance.
10. --hpx-cores option does not work.
11. Generation counters fail for ninplace > 0.

Results
=========================

Acknowledgements
=========================
* DOD BIG: Title: Advanced Development of the DoD Extreme-scale Execution Framework
Acknowledgment: no specific clause is needed; subcontractor must indicate "PO #190, Task Order #002, Project #BY11-034SP" on all invoices and other communications for work performed under the terms of this subcontract.
* PSAAP: "This material is based upon work supported by the Department of Energy, National Nuclear Security Administration, under Award Number(s) DE-NA0002377."             The Centers involved include:
     1. Center for Research in Extreme Scale Technologies (CREST), Indiana University
     2. Center for Shock-Wave Processing of Advanced Reactive Materials, University of Notre Dame
* XPRESS: XPRESS
Title: eXascale PRogramming Environment and System Software (XPRESS)
Acknowledgment: "This material is based upon work supported by the Department of Energy under Award Number(s) DE-SC0008809."
Disclaimer: "This report was prepared as an account of work sponsored by an agency of the United States Government. Neither the United States Government nor any agency thereof, nor any of their employees, makes any warranty, express or implied, or assumes any legal liability or responsibility for the accuracy, completeness, or usefulness of any information, apparatus, product, or process disclosed, or represents that its use would not infringe privately owned rights. Reference herein to any specific commercial product, process, or service by trade name, trademark, manufacturer, or otherwise does not necessarily constitute or imply its endorsement, recommendation, or favoring by the United States Government or any agency thereof. The views and opinions of authors expressed herein do not necessarily state or reflect those of the United States Government or any agency thereof."
* XSEDE computer time grant TG-CCR140035 "Dynamic Introspective Runtime to Enable Extreme Scaling for Irregular Time-varying Problems”.
This work used the Extreme Science and Engineering Discovery Environment (XSEDE), which is supported by National Science Foundation grant number ACI-1053575.
